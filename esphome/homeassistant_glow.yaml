---
# Home Assistant Glow
#
# Read your electricity meter by means of the pulse LED on your
# meter, useful if you do not have a serial port (P1).
#
substitutions:
  device_name: home-assistant-glow
  friendly_name: Home Assistant Glow
  device_description: "Measure your energy consumption with the pulse LED on your smart meter"
  pulse_pin: GPIO12
  status_led: GPIO5
  # imp/kWh rate â¬‡ #
  pulse_rate: '800'
  ip_address: !secret home-assistant-glow_ip
  reboot_time: 10min

esphome:
  name: '${device_name}'
  comment: '${device_description}'
  project:
    name: "klaasnicolaas.home_assistant_glow"
    version: "2.1.0"
  platform: ESP32
  board: esp32dev

packages:
  wifi: !include common/wifi.yaml


# Enable logging
logger:

# Enable Home Assistant API
api:
  #password: !secret esphome_api_password
  services:
  - service: reset_total
    then:
      - pulse_meter.set_total_pulses:
          id: energy_pulse_meter
          value: 0

ota:

web_server:
  port: 80

light:
  - platform: status_led
    pin: GPIO2
    internal: true
    id: led_blue
    
# Status LED for connection
status_led:
  pin:
    # Blue LED
    number: ${status_led}

# Sensors for ESP version and WIFI information
text_sensor:
  - platform: version
    hide_timestamp: true
    name: "${friendly_name} - ESPHome Version"
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} - IP Address"
      icon: mdi:wifi
    ssid:
      name: "${friendly_name} - Connected SSID"
      icon: mdi:wifi-strength-2

sensor:
  - <<: !include common/sensor/wifi_signal.yaml
  - <<: !include common/sensor/uptime.yaml

  - platform: pulse_meter
    id: energy_pulse_meter
    name: '${friendly_name} - Power consumption'
    unit_of_measurement: 'W'
    state_class: measurement
    device_class: power
    icon: mdi:flash-outline
    accuracy_decimals: 0
    pin: 
      number: ${pulse_pin}
      inverted: true
    on_value:
      then:
        - light.turn_on:
            id: led_blue
        - delay: 0.5s
        - light.turn_off:
            id: led_blue
    internal_filter: 250ms
    filters:
      - lambda: return x * ((60.0 / ${pulse_rate}) * 1000.0);
    total:
      name: '${friendly_name} - Total energy'
      unit_of_measurement: 'kWh'
      icon: mdi:circle-slice-3
      state_class: total_increasing
      device_class: energy
      accuracy_decimals: 5
      filters:
        - lambda: return x * (1.0 / ${pulse_rate});

binary_sensor:
  - <<: !include common/binary_sensor/status.yaml
