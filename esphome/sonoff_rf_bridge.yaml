substitutions:
  ip_address: !secret sonoff_rf_bridge_ip
  reboot_time: 15min

esphome:
  name: sonoff_rf_bridge
  platform: ESP8266
  board: esp01_1m

packages:
  wifi: !include common/wifi.yaml
  mqtt: !include common/mqtt.yaml

logger:

ota:

sensor:
  - platform: wifi_signal
    name: Sonoff RF Bridge Wifi Signal
    update_interval: 10s

  - platform: uptime
    name: Sonoff RF Bridge Uptime

binary_sensor:
  - platform: status
    name: Sonoff RF Bridge Status

#***************************************************
#        MOTION
#***************************************************
  - platform: remote_receiver
    name: Downstairs Motion
    id: downstairs_motion
    device_class: motion
    rc_switch_raw:
      code: '111010101000010110101100'
      protocol: 6
    filters:
      delayed_off: 5s

  - platform: remote_receiver
    name: Upstairs Motion
    id: upstairs_motion
    device_class: motion
    rc_switch_raw:
      code: '001111000101100110101100'
      protocol: 6
    filters:
      delayed_off: 5s

#*************************************************
#       DOORS
#*************************************************

# FRONT DOOR
  - platform: template
    name: Front Door
    device_class: door
    id: front_door
    lambda: return {};

  - platform: remote_receiver
    name: Front Door Tamper
    id: front_door_tamper
    rc_switch_raw:
      code: '001100101111000000000111'
      protocol: 6
    filters:
      delayed_off: 1000ms
    on_press:
      - binary_sensor.template.publish:
          id: front_door_bat
          state: OFF

  - platform: template
    name: Front Door Battery
    device_class: battery
    id: front_door_bat
    lambda: return {};

# BACK DOOR
  - platform: template
    name: Back Door
    device_class: door
    id: back_door
    lambda: return {};

  - platform: remote_receiver
    id: back_door_tamper
    name: Back Door Tamper
    rc_switch_raw:
      code: '010110000101011100000111'
      protocol: 6
    filters:
      delayed_off: 1000ms
    on_press:
      - binary_sensor.template.publish:
          id: back_door_bat
          state: OFF

  - platform: template
    name: Back Door Battery
    device_class: battery
    id: back_door_bat
    lambda: return {};

#***********************************************
#       WINDOWS
#***********************************************

# door window
  - platform: template
    name: Door Window
    device_class: window
    id: door_window
    lambda: return {};

  - platform: remote_receiver
    name: Door Window Tamper
    rc_switch_raw:
      code: '010101000011111000000111'
      protocol: 6
    filters:
      delayed_off: 200ms
    on_press:
      - binary_sensor.template.publish:
          id: door_window_bat
          state: OFF

  - platform: template
    name: Door Window Battery
    device_class: battery
    id: door_window_bat
    lambda: return {};

# Front Window
  - platform: template
    name: Front Window
    device_class: window
    id: front_window
    lambda: return {};

  - platform: remote_receiver
    name: Front Window Tamper
    rc_switch_raw:
      code: '001100100011000000000111'
      protocol: 6
    filters:
      delayed_off: 200ms
    on_press:
      - binary_sensor.template.publish:
          id: front_window_bat
          state: OFF

  - platform: template
    name: Front Window Battery
    device_class: battery
    id: front_window_bat
    lambda: return {};

# Kitchen Window
  - platform: template
    name: Kitchen Window
    device_class: window
    id: kitchen_window
    lambda: return {};

  - platform: remote_receiver
    name: Kitchen Window Tamper
    rc_switch_raw:
      code: '010111100001101100000111'
      protocol: 6
    filters:
      delayed_off: 200ms
    on_press:
      - binary_sensor.template.publish:
          id: kitchen_window_bat
          state: OFF

  - platform: template
    name: Kitchen Window Battery
    device_class: battery
    id: kitchen_window_bat
    lambda: return {};

# emmas window
  - platform: template
    name: Emma's Window
    device_class: window
    id: emmas_window
    lambda: return {};

  - platform: remote_receiver
    name: Emma's Window Tamper
    rc_switch_raw:
      code: '010110111010001100000111'
      protocol: 6
    filters:
      delayed_off: 100ms
    on_press:
      - binary_sensor.template.publish:
          id: emmas_window_bat
          state: OFF

  - platform: template
    name: Emma's Window Battery
    device_class: battery
    id: emmas_window_bat
    lambda: return {};

# bedroom window
  - platform: template
    name: Bedroom Window
    device_class: window
    id: bedroom_window
    lambda: return {};

  - platform: remote_receiver
    name: Bedroom Window Tamper
    rc_switch_raw:
      code: '010111100011001100000111'
      protocol: 6
    filters:
      delayed_off: 200ms
    on_press:
      - binary_sensor.template.publish:
          id: bedroom_window_bat
          state: OFF

  - platform: template
    name: Bedroom Window Battery
    device_class: battery
    id: bedroom_window_bat
    lambda: return {};

#************************************
# FRIDGE FREEZER
#*****************************************

# FRIDGE DOOR
  - platform: template
    name: Fridge Door
    device_class: door
    id: fridge_door
    lambda: return {};

  - platform: template
    name: Fridge Door Battery
    device_class: battery
    id: fridge_door_bat
    lambda: return {};

# FREEZER DOOR
  - platform: template
    name: Freezer Door
    device_class: door
    id: freezer_door
    lambda: return {};

  - platform: template
    name: Freezer Door Battery
    device_class: battery
    id: freezer_door_bat
    lambda: return {};

remote_receiver:
  pin:
    number: 4
    mode: INPUT_PULLUP
    inverted: True
  dump: rc_switch
  tolerance: 60
  filter: 4us
  idle: 4ms
  on_rc_switch:
    - lambda: |-
        if (x.code == 3338250){
          id(front_door).publish_state(true);
        }
        if (x.code == 3338254){
          id(front_door).publish_state(false);
        }
        if (x.code == 3338246){
          id(front_door_bat).publish_state(true);
        }
        if (x.code == 5789450){
          id(back_door).publish_state(true);
        }
        if (x.code == 5789454){
          id(back_door).publish_state(false);
        }
        if (x.code == 5789446){
          id(back_door_bat).publish_state(true);
        }
        if (x.code == 5520906){
          id(door_window).publish_state(true);
        }
        if (x.code == 5520910){
          id(door_window).publish_state(false);
        }
        if (x.code == 5520902){
          id(door_window_bat).publish_state(true);
        }
        if (x.code == 3289098){
          id(front_window).publish_state(true);
        }
        if (x.code == 3289102){
          id(front_window).publish_state(false);
        }
        if (x.code == 3289094){
          id(front_window_bat).publish_state(true);
        }
        if (x.code == 6167306){
          id(kitchen_window).publish_state(true);
        }
        if (x.code == 6167310){
          id(kitchen_window).publish_state(false);
        }
        if (x.code == 6167302){
          id(kitchen_window_bat).publish_state(true);
        }
        if (x.code == 6005514){
          id(emmas_window).publish_state(true);
        }
        if (x.code == 6005518){
          id(emmas_window).publish_state(false);
        }
        if (x.code == 6005510){
          id(emmas_window_bat).publish_state(true);
        }
        if (x.code == 6173450){
          id(bedroom_window).publish_state(true);
        }
        if (x.code == 6173454){
          id(bedroom_window).publish_state(false);
        }
        if (x.code == 6173446){
          id(bedroom_window_bat).publish_state(true);
        }
        if (x.code == 5857034){
          id(fridge_door).publish_state(true);
        }
        if (x.code == 5857038){
          id(fridge_door).publish_state(false);
        }
        if (x.code == 5857030){
          id(fridge_door_bat).publish_state(true);
        }
        if (x.code == 5857031){
          id(fridge_door_bat).publish_state(false);
        }
        if (x.code == 5809162){
          id(freezer_door).publish_state(true);
        }
        if (x.code == 5809166){
          id(freezer_door).publish_state(false);
        }
        if (x.code == 5809158){
          id(freezer_door_bat).publish_state(true);
        }
        if (x.code == 5809159){
          id(freezer_door_bat).publish_state(false);
        }

remote_transmitter:
  pin: 5
  carrier_duty_percent: 100%

status_led:
  pin:
    number: GPIO13
    inverted: no

switch:
  - platform: restart
    name: Reboot RF Bridge
