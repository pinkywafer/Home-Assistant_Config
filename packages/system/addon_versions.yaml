command_line:
  # addons
  - sensor:
      name: addon updates
      command: 'curl http://supervisor/supervisor/info -H "Authorization: Bearer $(printenv SUPERVISOR_TOKEN)" | jq ''{"addons":[.data.addons[] | select(.update_available == true)]}'''
      value_template: "{{ value_json.addons | length }}"
      json_attributes:
      - addons
      scan_interval: 3600

automation:
  - id: 'b0751eed-372c-4500-902f-4fe1b356be72'
    alias: Addons Update Notification
    trigger:
      - platform: state
        entity_id: sensor.addon_updates
    action:
    - if:
        - condition: numeric_state
          entity_id: sensor.addon_updates
          above: 0
      then:
        - service: notify.mobile_app_jenny_s_phone
          data:
            message: >
              There are updates to {{ states("sensor.addon_updates") }} Add-Ons:
              {% for addon in state_attr("sensor.addon_updates","addons") %}
                * {{addon['name'] }} {{ addon['version'] }} -> {{ addon['version_latest'] }}
              {%- endfor %}
            title: Add-ons Updates Available
            data:
              sticky: 'true'
              group: updates
              tag: update_addons
              color: '#ff8c00'
              clickAction: /hasio/dashboard
        - service: persistent_notification.create
          data:
            title: Update Home Assistant Add-ons
            message: >-
              There are updates to {{ states("sensor.addon_updates") }} Add-Ons:
              {%- for addon in state_attr("sensor.addon_updates","addons") -%}
                <br>* **{{addon['name'] }}** _{{ addon['version'] }}_ -> _{{ addon['version_latest'] }}_
              {%- endfor -%}
            notification_id: update_addons
      else:
        - service: notify.mobile_app_jenny_s_phone
          data:
            message: clear_notification
            data:
              tag: update_addons
        - service: persistent_notification.dismiss
          data:
            notification_id: update_addons
